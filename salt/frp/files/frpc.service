#! /bin/sh
### BEGIN INIT INFO
# Provides:          mattermost
# Required-Start:    $network $syslog
# Required-Stop:     $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: FRP
# Description:       frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=frpc
DESC="frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet."
CHUSER=frp
DAEMON="/opt/frp/current/frpc"
DAEMONOPTS="-c /opt/frp/frpc.ini"
PIDFILE="/var/run/$NAME.pid"
LOGFILE="/var/log/$NAME.log"
SCRIPTNAME=/etc/init.d/$NAME

. /etc/rc.d/init.d/functions

start()
{
    echo -n "Starting $NAME..."
    status > /dev/null
    case "$?" in
        0)
            echo -n "$NAME (pid $PID) already running"
            success
            echo
            RETVAL=0
        ;;
        1)
            failure
            echo
            echo "Process dead but pidfile '$PIDFILE' exists."
            RETVAL=37
        ;;
        3)
            su $CHUSER -s /bin/bash -c "$DAEMON $DAEMONOPTS &" >> $LOGFILE 2>&1
            sleep 5
            PID=$(pidof $NAME)
            if [ "$PID" == "" ] || [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                failure
                echo
                RETVAL=1
            else
                echo $PID > $PIDFILE
                success
                echo
                RETVAL=0
            fi
        ;;
        esac
}

stop()
{
    echo -n "Stopping $NAME..."
    status > /dev/null
    case "$?" in
        0)
            kill -HUP $PID
            rm -f $PIDFILE
            success
            echo
            RETVAL=0
        ;;
        1)
            failure
            echo
            echo "Process dead but pidfile '$PIDFILE' exists."
            RETVAL=37
        ;;
        3)
            failure
            echo
            RETVAL=0
        ;;
    esac
}

status()
{
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            echo "$NAME process dead but pidfile '$PIDFILE' exists."
            return 1
        else
            echo "$NAME (pid $PID) is running"
            return 0
        fi
    else
        echo "$NAME is stopped"
        return 3
    fi

}
case "$1" in
start)
    start

;;
status)
    status
    RETVAL=$?
;;
stop)
    stop
;;

restart)
    stop
    start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 3
esac

exit $RETVAL