# ==============================================================================
# pipeline =====================================================================
# ==============================================================================

pipeline:
  test-default:
    group: test
    image: fpfis/drone-plugin-packer
    secrets: [ AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ]
    commands:
      - packer build -var Version=${DRONE_BUILD_NUMBER} -var profile=default -var AWS_AKI=$AWS_ACCESS_KEY_ID -var AWS_SAK=$AWS_SECRET_ACCESS_KEY test/aws.json
    when:
      event: [ push , pull_request ]
      branch: [master]

  test-docker:
    group: test
    image: fpfis/drone-plugin-packer
    secrets: [ AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ]
    commands:
      - packer build -var Version=${DRONE_BUILD_NUMBER} -var profile=docker -var AWS_AKI=$AWS_ACCESS_KEY_ID -var AWS_SAK=$AWS_SECRET_ACCESS_KEY test/aws.json
    when:
      event: [ push , pull_request ]
      branch: [master]

  test-lamp:
    group: test
    image: fpfis/drone-plugin-packer
    secrets: [ AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ]
    commands:
      - packer build -var Version=${DRONE_BUILD_NUMBER} -var profile=lamp -var AWS_AKI=$AWS_ACCESS_KEY_ID -var AWS_SAK=$AWS_SECRET_ACCESS_KEY test/aws.json
    when:
      event: [ push , pull_request ]
      branch: [master]

  create-deploy-production:
      image: fpfis/drone-plugin-github-deploy
      state: create
      deploy_environment: production
      secrets: [ github_api_token ]
      automerge: false
      when:
        event: [push]
        branch: [master]

  push-production:
      image: kroniak/ssh-client
      secrets: [ SALT_MASTER_IP, SALT_MASTER_KEY ]
      commands:
        - echo "$SALT_MASTER_KEY" > /deploy.key
        - chmod 600 /deploy.key
        - ssh -o StrictHostKeyChecking=no -i /deploy.key ec2-user@$SALT_MASTER_IP sudo git -C "/srv/cloud9/" pull
      when:
        event: deployment

event : [pull_request, push ]
branches: master
